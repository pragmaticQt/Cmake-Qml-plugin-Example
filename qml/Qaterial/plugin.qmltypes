import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable Qaterial 1.0 .'

Module {
    dependencies: ["QtQuick 2.0"]
    Component {
        name: "qaterial::IconDescription"
        prototype: "QObject"
        exports: ["Qaterial/IconDescription 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "source"; type: "QUrl" }
        Property { name: "width"; type: "int" }
        Property { name: "height"; type: "int" }
        Property { name: "color"; type: "QColor" }
        Property { name: "cache"; type: "bool" }
        Signal {
            name: "sourceChanged"
            Parameter { name: "source"; type: "QUrl" }
        }
        Signal {
            name: "widthChanged"
            Parameter { name: "width"; type: "int" }
        }
        Signal {
            name: "heightChanged"
            Parameter { name: "height"; type: "int" }
        }
        Signal {
            name: "colorChanged"
            Parameter { name: "color"; type: "QColor" }
        }
        Signal {
            name: "cacheChanged"
            Parameter { name: "cache"; type: "bool" }
        }
    }
    Component {
        name: "qaterial::IconLabelImpl"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["Qaterial/IconLabelImpl 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "horizontalAlignment"; type: "Qt::Alignment" }
        Property { name: "verticalAlignment"; type: "Qt::Alignment" }
        Property { name: "display"; type: "int" }
        Property { name: "spacing"; type: "double" }
        Property { name: "mirrored"; type: "bool" }
        Property { name: "icon"; type: "IconDescription"; isPointer: true }
        Property { name: "iconItem"; type: "QQuickItem"; isPointer: true }
        Property { name: "labelItem"; type: "QQuickItem"; isPointer: true }
        Signal {
            name: "horizontalAlignmentChanged"
            Parameter { name: "value"; type: "Qt::Alignment" }
        }
        Signal {
            name: "verticalAlignmentChanged"
            Parameter { name: "value"; type: "Qt::Alignment" }
        }
        Signal {
            name: "displayChanged"
            Parameter { name: "value"; type: "int" }
        }
        Signal {
            name: "spacingChanged"
            Parameter { name: "value"; type: "double" }
        }
        Signal {
            name: "mirroredChanged"
            Parameter { name: "value"; type: "bool" }
        }
        Signal {
            name: "iconChanged"
            Parameter { name: "value"; type: "IconDescription"; isPointer: true }
        }
        Signal {
            name: "iconItemChanged"
            Parameter { name: "value"; type: "QQuickItem"; isPointer: true }
        }
        Signal {
            name: "labelItemChanged"
            Parameter { name: "value"; type: "QQuickItem"; isPointer: true }
        }
    }
    Component {
        name: "qaterial::IconLabelPositionner"
        prototype: "QObject"
        exports: ["Qaterial/IconLabelPositionner 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Display"
            values: {
                "IconOnly": 0,
                "TextOnly": 1,
                "TextBesideIcon": 2,
                "TextUnderIcon": 3
            }
        }
        Property { name: "horizontalAlignment"; type: "Qt::Alignment" }
        Property { name: "verticalAlignment"; type: "Qt::Alignment" }
        Property { name: "display"; type: "Display" }
        Property { name: "spacing"; type: "double" }
        Property { name: "mirrored"; type: "bool" }
        Property { name: "iconImplicitSize"; type: "QSizeF" }
        Property { name: "labelImplicitSize"; type: "QSizeF" }
        Property { name: "containerSize"; type: "QSizeF" }
        Property { name: "implicitSize"; type: "QSizeF" }
        Property { name: "iconRect"; type: "QRectF"; isReadonly: true }
        Property { name: "labelRect"; type: "QRectF"; isReadonly: true }
        Signal {
            name: "horizontalAlignmentChanged"
            Parameter { name: "horizontalAlignment"; type: "Qt::Alignment" }
        }
        Signal {
            name: "verticalAlignmentChanged"
            Parameter { name: "verticalAlignment"; type: "Qt::Alignment" }
        }
        Signal {
            name: "displayChanged"
            Parameter { name: "display"; type: "Display" }
        }
        Signal {
            name: "spacingChanged"
            Parameter { name: "spacing"; type: "double" }
        }
        Signal {
            name: "mirroredChanged"
            Parameter { name: "mirrored"; type: "bool" }
        }
        Signal {
            name: "iconImplicitSizeChanged"
            Parameter { name: "iconImplicitSize"; type: "QSizeF" }
        }
        Signal {
            name: "labelImplicitSizeChanged"
            Parameter { name: "labelImplicitSize"; type: "QSizeF" }
        }
        Signal {
            name: "containerSizeChanged"
            Parameter { name: "containerSize"; type: "QSizeF" }
        }
        Signal {
            name: "implicitSizeChanged"
            Parameter { name: "implicitSize"; type: "QSizeF" }
        }
        Signal {
            name: "iconRectChanged"
            Parameter { name: "iconRect"; type: "QRectF" }
        }
        Signal {
            name: "labelRectChanged"
            Parameter { name: "labelRect"; type: "QRectF" }
        }
    }
}
